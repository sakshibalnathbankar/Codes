package SortingPrograms;

public class Sort 
{

    //Bubble Sort
    public void BubbleSort(int[] a, int size) 
    {
        for (int i = 0; i < size; i++) 
        {
            for (int j = i + 1; j < size; j++) 
            {
                if (a[i] > a[j]) 
                {
                    swap(a, i, j);
                }
            }
        }
    }

    //Swap Function
    public void swap(int arr[], int i, int j)
    {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }
    
     //Quick Sort
    public void QuickSort(int arr[], int low, int high)
    {
        if(low<high)
        {
            int pivot = partition(arr,low,high);
            QuickSort(arr,low,pivot-1);
            QuickSort(arr,pivot+1,high);
        }
        
    }
    
    public int partition(int arr[], int low, int high)
    {
        int i = low;
        int j = high;
        int pivot = arr[low];
        
        while(i<j)
        {
            while(i<j &&arr[i]<=pivot)
            {
                i++;
            }
            while(arr[j]>pivot)
            {
                j--;
            }
            if(i<j)
            {
                swap(arr,i,j);
            }
        }
        swap(arr,low,j);
        return j;
    } 
    
    //MergeSort
    public void MergeSort(int[] a, int l, int h)
    {
        if(l<h)
        {
            int mid = (l+h)/2;
            MergeSort(a,l,mid);
            MergeSort(a,mid+1,h);
            Merge(a,l,h,mid);
        }
    }
    
    public void Merge(int[] a, int l,int h,int m)
    {
        int[] b =  new int[a.length];
        int i=l;
        int j=m+1;
        int k=l;
        
        while(i<=m && j<=h)
        {
            if(a[i]<a[j])
            {
                b[k]=a[i];
                i++;
            }
            else
            {
                b[k]=a[j];
                j++;
            }
            k++;
        }
        while(j<=h)
        {
            b[k]=a[j];
            k++;j++;
        }
        
        while(i<=m)
        {
            b[k]=a[i];
            k++;i++;
        }
        
        for(i=l;i<=h;i++)
        {
            a[i]=b[i];
        } 
    }
    
   //Print Function
    public void print(int[] a, int n)
    {
        for(int i = 0; i < n; i++)
        {
            System.out.print(a[i] + " ");
        }
        System.out.println();
    }
}
